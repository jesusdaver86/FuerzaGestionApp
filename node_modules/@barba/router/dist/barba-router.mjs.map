{"version":3,"file":"barba-router.mjs","sources":["../src/router.ts"],"sourcesContent":["/**\n * @barba/router\n * <br><br>\n * ## Barba Router.\n *\n * - Add `route` to Barba transitions resolution\n *\n * @module router\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IBarbaPlugin, ITransitionData } from '@barba/core/src/defs';\n\n// Barba/core\nimport { Core } from '@barba/core/src/core';\nimport { Logger } from '@barba/core/src/modules/Logger';\n// Local\nimport { version } from '../package.json';\nimport { IRouteByName, IRouteResolved, IRouterOptions } from './defs';\n\nclass Router implements IBarbaPlugin<IRouterOptions> {\n  public name = '@barba/router';\n  public version = version;\n  public barba: Core;\n  public logger: Logger;\n\n  public routeNames: string[] = [];\n  public routesByName: IRouteByName = {};\n\n  /**\n   * Plugin installation.\n   */\n  public install(barba: Core, { routes = [] }: IRouterOptions = {}) {\n    this.logger = new barba.Logger(this.name);\n    this.logger.info(this.version);\n    this.barba = barba;\n\n    routes.forEach(route => {\n      const { name, path } = route;\n      const keys: any[] = [];\n      const regex = this.barba.helpers.pathToRegexp(path, keys);\n\n      if (this.routeNames.indexOf(name) > -1) {\n        console.warn(`[@barba/router] Duplicated route name (${name})`);\n      } else {\n        this.routeNames.push(name);\n        this.routesByName[name] = {\n          keys,\n          path,\n          regex,\n        };\n      }\n    });\n\n    // Add property to \"pageSchema\" (current, next)\n    barba.schemaPage.route = undefined;\n  }\n\n  /**\n   * Plugin initialisation.\n   */\n  public init() {\n    // Wait for store initialization then add new rule for routes\n    this.barba.transitions.store.add('rule', {\n      position: 1,\n      value: {\n        name: 'route',\n        type: 'object',\n      },\n    });\n    // Register hooks\n    this.barba.hooks.page(this.resolveRoutes, this);\n    this.barba.hooks.reset(this.resolveRoutes, this);\n  }\n\n  /**\n   * Resolve URL to route name.\n   */\n  public resolveUrl(url: string): IRouteResolved | null {\n    const { path } = this.barba.url.parse(url);\n    const output: IRouteResolved = {\n      name,\n      params: {},\n    };\n\n    /* tslint:disable:no-shadowed-variable */\n    for (let i = 0, l = this.routeNames.length; i < l; i++) {\n      const name = this.routeNames[i];\n      const { regex, keys } = this.routesByName[name];\n      const res = regex.exec(path);\n\n      if (res !== null) {\n        output.name = name;\n\n        keys.forEach((key, i) => {\n          output.params[key.name] = res[i + 1];\n        });\n\n        return output;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Hooks: do, reset.\n   *\n   * - Update `current` and `next` data\n   */\n  public resolveRoutes(data: ITransitionData): void {\n    const { current, next } = data;\n\n    current.route = current.url.href\n      ? this.resolveUrl(current.url.href)\n      : undefined;\n    next.route = next.url.href ? this.resolveUrl(next.url.href) : undefined;\n  }\n}\n\nconst router = new Router();\n\nexport default router;\n"],"names":["router","this","version","install","barba","routes","logger","Logger","name","info","forEach","route","path","keys","regex","_this","helpers","pathToRegexp","routeNames","indexOf","console","warn","push","routesByName","schemaPage","undefined","init","transitions","store","add","position","value","type","hooks","page","resolveRoutes","reset","resolveUrl","url","parse","output","params","i","l","_this2","res","exec","key","length","data","current","next","href"],"mappings":"eA2HMA,EAAS,eApGf,aACSC,UAAO,gBACPA,aAAUC,EAIVD,gBAAuB,GACvBA,kBAA6B,8BAK7BE,QAAA,SAAQC,8BAA+C,MAAhCC,OAAAA,aAAS,KACrCJ,KAAKK,OAAS,IAAIF,EAAMG,OAAON,KAAKO,MACpCP,KAAKK,OAAOG,KAAKR,KAAKC,SACtBD,KAAKG,MAAQA,EAEbC,EAAOK,SAAQ,SAAAC,OACLH,EAAeG,EAAfH,KAAMI,EAASD,EAATC,KACRC,EAAc,GACdC,EAAQC,EAAKX,MAAMY,QAAQC,aAAaL,EAAMC,GAEhDE,EAAKG,WAAWC,QAAQX,IAAS,EACnCY,QAAQC,+CAA+Cb,QAEvDO,EAAKG,WAAWI,KAAKd,GACrBO,EAAKQ,aAAaf,GAAQ,CACxBK,KAAAA,EACAD,KAAAA,EACAE,MAAAA,OAMNV,EAAMoB,WAAWb,WAAQc,KAMpBC,KAAA,WAELzB,KAAKG,MAAMuB,YAAYC,MAAMC,IAAI,OAAQ,CACvCC,SAAU,EACVC,MAAO,CACLvB,KAAM,QACNwB,KAAM,YAIV/B,KAAKG,MAAM6B,MAAMC,KAAKjC,KAAKkC,cAAelC,MAC1CA,KAAKG,MAAM6B,MAAMG,MAAMnC,KAAKkC,cAAelC,SAMtCoC,WAAA,SAAWC,GAQhB,eAPQ1B,EAASX,KAAKG,MAAMkC,IAAIC,MAAMD,GAA9B1B,KACF4B,EAAyB,CAC7BhC,KAAAA,KACAiC,OAAQ,eAIDC,EAAOC,GACd,IAAMnC,EAAOoC,EAAK1B,WAAWwB,KACLE,EAAKrB,aAAaf,GAA3BK,IAAAA,KACTgC,IADE/B,MACUgC,KAAKlC,GAEvB,GAAY,OAARiC,EAOF,OANAL,EAAOhC,KAAOA,EAEdK,EAAKH,SAAQ,SAACqC,EAAKL,GACjBF,EAAOC,OAAOM,EAAIvC,MAAQqC,EAAIH,EAAI,SAG7BF,IAZFE,EAAI,EAAGC,EAAI1C,KAAKiB,WAAW8B,OAAQN,EAAIC,EAAGD,IAAK,SAA/CA,oCAgBT,eAQKP,cAAA,SAAcc,OACXC,EAAkBD,EAAlBC,QAASC,EAASF,EAATE,KAEjBD,EAAQvC,MAAQuC,EAAQZ,IAAIc,KACxBnD,KAAKoC,WAAWa,EAAQZ,IAAIc,WAC5B3B,EACJ0B,EAAKxC,MAAQwC,EAAKb,IAAIc,KAAOnD,KAAKoC,WAAWc,EAAKb,IAAIc,WAAQ3B"}